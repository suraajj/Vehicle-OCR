apply plugin: 'android'

buildscript {
    repositories {
        //mavenCentral()

        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
}

ext {
    compileSdkVersion = 23
    buildToolsVersion = '21.1.1'
}

android {

    //http://stackoverflow.com/questions/17320088/android-build-dex-jumbo-mode-in-gradle
	dexOptions {
             javaMaxHeapSize "2g"
             jumboMode = true
        }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    sourceSets {

        signingConfigs {
            releaseConfig {
                storeFile file("youku_android_key.keystore")
                storePassword "wuxian_youku_android"
                keyAlias "youku_android_key.keystore"
                keyPassword "wuxian_youku_android"
            }
        }

        main {
            manifest.srcFile 'AndroidManifest.xml'
          // java.srcDirs = ['test','src']
            java.srcDirs = ['src']
            resources.srcDirs = ['test','src']
            aidl.srcDirs = ['test','src']
            renderscript.srcDirs = ['test','src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']

            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        debug {
            applicationIdSuffix "debug"
            versionNameSuffix "_debug"

//            proguardFile 'proguard.cfg'
//            minifyEnabled true
//
//            shrinkResources true

        }

        release {
            signingConfig signingConfigs.releaseConfig

            proguardFile 'proguard.cfg'
            minifyEnabled true

            shrinkResources true
        }

        otherByildType {

//            debuggable	 true	 false
//            jniDebugBuild	 false	 false
//            renderscriptDebugBuild	 false	 false
//            renderscriptOptimLevel	 3	 3
//            applicationIdSuffix	 null	 null
//            versionNameSuffix	 null	 null
//            signingConfig	 android.signingConfigs.debug	 null
//            zipAlign	 false	 true
//            runProguard	 false	 false
//            proguardFile	 N/A (set only)	 N/A (set only)
//            proguardFiles
        }
    }
}
